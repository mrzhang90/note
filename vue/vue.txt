vue.js不是一个框架,它只是一个MVVM风格的双向数据绑定的库，专注于UI层面
vue不支持IE8以下浏览器，因为IE8以下为ES5支持不好，例如IE8以下不支持Object.assign对象拷贝的方法
PS:
	vue会把自定义的大写标签名转成小写，从而引起报错，可以安装decamelize，即可支持大写
		https://www.npmjs.com/package/decamelize
ajax
	 vue-resource
	 	vue 的 ajax 库
	 	一般非单页应用在ready里获取数据就行,如果是单页应用根据路由生命周期来获取,比如
			route: {
			  data: function (transition) {
			    //数据获取,修改data
			    transition.next()
			  }
			}
模板标签：
	{{}}
		{{$data | json}}
		PS:vue + swig时，{{}}这种标记会有代码冲突，建议把swig的标识符改成[[]]
	v-if
	v-show
	v-model
	v-bind:title="message"
		将元素绑定title属性，可简写：
		:title
	v-bind:class
		简写：
		:class
	v-on:submit.prevent="submitMyForm"
		v-on:submit 可以简写成 @:submit
		.prevent 相当于脚本里的 ev.preventDefault();
		即：@submit.prevent="submitMyForm"
	@click
		可以把脚本直接写在元素内，@click="num+=1"
	template
		首先自定义组件：
			<praise id="yes" title="赞" pclass="btn btn-primary"></praise>
		然后创建template模板
			<template id="praise-templ">
				<label for="{{id}}">{{ title }}</label>
				<input id="{{ id }}" type="button" class="{{ pclass }}" name="" value="{{ count }}" @click=" uploadNum "/>
			</template>
		最后脚本注册
			Vue.component('praise',{
				props:['id','title','pclass'],//注册
				template:'#praise-templ',
				data:function(){
					return {
						count:0
					}
				},
				methods:{
					uploadNum:function(){
						this.count+=1
					}
				}
			})
created和ready都是 vue 组件的生命周期
created
	类型： Function
	详细：
		在实例创建之后同步调用。此时实例已经结束解析选项，这意味着已建立：数据绑定，计算属性，方法，watcher/事件回调。但是还没有开始 DOM 编译，$el 还不存在。
ready
	类型： Function
	详细：
		在编译结束和 $el 第一次插入文档之后调用，如在第一次 attached 钩子之后调用。注意必须是由 Vue 插入（如 vm.$appendTo() 等方法或指令更新）才触发 ready 钩子。
method
	用来定义方法的,比如你@click="test",methods就定义test这个方法
remove
	this.items.$remove(task)
filter
	this.items.filter(function(task){
		return !task.complted;
	})
计算：
	方式1.
		元素内参与计算
		{{ score>99 ? "好学生" : "普通学生"}}
	方式二.
		computed方法
			是计算属性
		调用方式
			{{ userName }}
		计算脚本
			computed:{
				userName:function(){
					return "全名为：【"+ this.firstName + this.lastName+"】"
				}
			}
vue：
	new Vue({
		el:'#app',
		data:{
			message:'Hello world'
		},
		methods:{
			submitMyForm:function(ev){
				ev.preventDefault();
				alert('submit')
			}
		}
	})