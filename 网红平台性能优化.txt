一.实现的方式：
	1.Polling(AJAX)
		最简单，最耗性能-不断轮询
		计算方式：
			(871*10,000)/1=8,710,000 bytes = 69,690,000 bits per second (66Mbps)
			header请求是871个字节，1万个客户端，除1秒的吞吐量，等于8百万字节，也就是等于66M
	2.Long Polling(Comet)
		在Polling基础上做的优化，我发一个请求给服务器，服务器没更新，那么就保持连接，一直到服务器有数据了，服务器就返回，客户端收到数据后，再发一个请求，保证连接不中断
		计算方式：
			(871*10,000)/60=145,166 bytes = 1.1Mbps //预计60秒发一次，所以请求量会讲到1.1M
	3.Flash
	4.Web socket
		H5-主流方式
		计算方式
			(2*10,1000)/1=20,000 bytes = 156Kbs //每个请求必须带2个字节
		请求方式：
			请求头通过Upgrade字段，
		socket.io直接建好socket链接