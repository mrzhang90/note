Reset的选择
  *的杀伤力太大！！！
  Neat.css融合-推荐
    Reset.css 重置
    Normalize.css修复
  html{box-sizing: border-box;}
  *,*:before,*:after{box-sizing: inherit;}
  
弹性盒模型
  flex模型
    如果做移动端页面，没必要用float、inline-block之类的了。flex最合适的

基于移动端的PX与REM
  目前的设计稿,一般是 640 750 1125，一般要先均分成100份，(兼容vh,vm) 750/10 = 75px。div宽是240px*120px css的书写改为3.2rem * 1.6rem。 配合响应式修改html根的大小。
  data-dpr-字体大小 
    different size  different DPR
    字体不建议使用rem的，data-dpr属性动态设置字体大小。屏幕变大放更多的文字，或者屏幕更大放更多的字。
  神奇的padding/margin-top等比例缩放间距

  <html style="font-size:0.625rem">
    这是font-size=10px,是利用10/16得来的，也就是说font-size就是10px，为了便于以后的计算

box-sizing:border-box;-webkit-box-sizing:border-box;
	移动端要设置盒模型，这样就不会被撑开	
em=1个当前元素文字大小; rem=1个html的文字大小
window.devicePixelRatio:像素比是设备物理像素和设备独立像素(dips)的比例,像素比为2，原先一个像素东西会用2像素的区域来显示;
物理像素:设备屏幕的本身像素值;独立像素:设备屏幕的本身像素值/像素比;实际像素:文档的实际像素
<meta name="viewport" content="width=device-width,height=device-height,user-scalable=no,initial-scale=1.0,minimum-scale=1.0,maximum-scale=1,target-densitydpi=device-dpi" />
<meta name="viewport" content="" />:视口设置;
    width:视口宽度(数值||device-width) 直接数值安卓部分手机不支持,IOS支持; user-scalable:是否允许用户缩放( yes||no); initial-scale:初始比例; minimum-scale:最小缩放比例; maximum-scale:最大缩放比例;
    target-densitydpi://每英寸像素点的个数
        dpi_value 70-400(取值范围)
        device-dpi 设备默认像素密度
        high-dpi 高像素密度
        meidum-dpi 中等像素密度
        low-dpi 低像素密度
        webkit 内核已准备再支持
适配：
	<script>//移动端适配等比例
	    var i=0;
	    i=window.devicePixelRatio>1?1/window.devicePixelRatio:1;
	    document.write('<meta name="viewport" content="width=device-width,initial-scale='+i+',minimum-scale='+i+',maximum-scale='+i+',user-scalable=no" />');
	</script>
	<script>//移动端ren字体适配
	    //getBoundingClientRect() 元素的尺寸和位置
	    var oHtml=document.getElementsByTagName("html")[0];//在js里找到html这个元素
	    var iWidth=oHtml.getBoundingClientRect().width;//获取到html的宽度;
	    oHtml.style.fontSize=iWidth/16+"px";//给html设置字体大小，字体的大小刚好是html宽度的16分之一;
	</script>

适配方案一: 1.viewport 宽度设置320;2.页面的宽度按照320来写,内容设置居中
适配方案二:(x) 百分比布局
适配方案二: (rem)

这个适配更适合手机
    @media all and (max-device-width:640px)
@media all and (min-width:320px) and (max-width:767px)
超小屏幕:手机 (<768px); 小屏幕:平板 (≥768px);中等屏幕:桌面 (≥992px);大屏幕:桌面 (≥1200px);超大屏幕:桌面 (≥1400px)
媒体关键字:and/not/only
媒体类型:
    all 所有的类型
    handheld 手持设备
    screen 彩屏设备
    print 打印预览
    braille 盲文触觉设备
    embossed 盲文打印机
    projection 投影
    speech 听觉设备
    TTY  电传打字机终端，或显示能力有限的移动设备
    tv 电视
媒体特征
    width  等于
    min-width 大于等于
    max-width 小于等于
    orientation : landscape 横屏
    orientation : portrait 竖屏
    height
    min-height
    max-height
    device-width
    min-device-width
    max-device-width
    device-height
    min-device-height
    max-device-height
    *aspect-ratio  宽高比 (分数)
    min-aspect-ratio
    max-aspect-ratio
    device-aspect-ratio  设备宽高比
    min-device-aspect-ratio
    max-device-aspect-ratio
    device-pixel-ratio

rem配置参考：
  html {font-size:10px}
  @media screen and (min-width:480px) and (max-width:639px) {
      html {
          font-size: 15px
      }
  }
  @media screen and (min-width:640px) and (max-width:719px) {
      html {
          font-size: 20px
      }
  }
  @media screen and (min-width:720px) and (max-width:749px) {
      html {
          font-size: 22.5px
      }
  }
  @media screen and (min-width:750px) and (max-width:799px) {
      html {
          font-size: 23.5px
      }
  }
  @media screen and (min-width:800px) and (max-width:959px) {
      html {
          font-size: 25px
      }
  }
  @media screen and (min-width:960px) and (max-width:1079px) {
      html {
          font-size: 30px
      }
  }
  @media screen and (min-width:1080px) {
      html {
          font-size: 32px
      }
  }