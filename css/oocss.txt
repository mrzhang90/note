http://oocss.org
	1.不要直接定义子节点，应把共性声明放到父类。
		.mod .inner{}  //.mod下面的inner
		.inner{}       //不建议
	2.结构和皮肤相分离。
		<div class=“container simpleExt”></div>   //html 结构
		.container {……}    //控制结构的class
		.simpleExt{……}      //控制皮肤的class
	3.容器和内容相分离。
		<div class=“container”><ul><li>排行</li></ul></div>   //html 结构
		.container ul{……}    //ul依赖了容器
		<div class=“container”><ul class=“rankList ”><li>排行</li></ul></div>   
		.rankList ul{……}    //解除与容器的依赖，可以从一个容器转移到其他容器
	4.抽象出可重用的元素，建好组件库，在组件库内寻找可用的元素组装页面。
	5.往你想要扩展的对象本身增加class而不是他的父节点。
	6.对象应保持独立性。
		<div class=“container”><div class=“mod”></div></div>   //html 结构
		.container {……} .container .mod{……} //控制结构的class
		<div class=“container mod”></div>//这种方案最佳，只要保证container和mod两个的独立性就好了
	7.避免使用ID选择器，权重太高，无法重用。
	8.避免位置相关的样式。
		#header .container {……}, #footer .container{……} //头和尾都写了container容器
		.container{}//最佳方式是把container容器提炼出来

		header h1 {……}, #footer h1 {……} //头和尾都用了h1，这里就不好直接提炼h1出来
		h1.h1{}    h2.h2{}   <h1 class=“h1”></h1>//可以这样用，在h1标签定义h1的类名，然后h1.h1、h1.h2依次类推
	9.保证选择器相同的权重。
	10.类名 简短 清晰 语义化 OOCSS的名字并不影响HTML语义化。
