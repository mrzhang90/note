动态元素:
appendChild是动态控制元素,把ul的节点追加到ul内,相当于替换,那么因为每次改变指针,所以位置发生改变如下:
for(var i= 0,len=li.length;i<len;i++){
    ul.appendChild(li[i]);
}
运算前:
<ul>
    <li>1</li>
    <li>2</li>
    <li>3</li>
    <li>4</li>
</ul>
运算后:
<ul>
    <li>2</li>
    <li>4</li>
    <li>3</li>
    <li>1</li>
</ul>


1.数组
    parseInt:如果数组只有一个值,那么从左往右看,如果是一个数字,就转成数字
    Number:如果只要一个数字,那么会转成数字,如果两个数字以上,那么就是NaN

2.隐士类型转换
    调取的是Number类型转换
200200200
3.多条件比较
    &&:true-会一直执行,直到最后;false-停到flase,输出当前条件的结果;
    ||:true-停到flase,并输出到当前结果;false-会一直执行,直到为true的结果;

4.nodeType属性值分别为1,2,3
    1:元素节点 2:属性节点 3:文本节点

5.折纸3D的Z点角度计算方式 = (width/2) / tan(360/length/2)

6.这是js运动脚本
http://www.cnblogs.com/bluedream2009/archive/2010/06/19/1760909.html

7.日期
    new Date().getTime()-返回是一个从现在时间-1970年,得到的结果的毫秒数,也可以理解为返回一个当前时间的毫秒数

8.get和post的区别:
    1.GET请求是url带参数的方式传递,post请求是作为HTTP消息的实体内容传递给服务器;
    2.GET对数据大小有限制,通常2k左右;post理论上不受限制
    3.GET请求会被浏览器缓存,可以用历史记录找到,所以可能存在严重安全问题;post可以避免这个问题
    4.GET和POST传递到服务器端的获取方式也不相同

概念:
javascript的组成：
ECMAScript(标准) : javascript组成语言的语法和基本对象
DOM : 文档对象模型  描述处理网页内容的方法和接口
BOM : 浏览器对象模型 描述与浏览器进行交互的方法和接口

js的组成：
    ECMAScript(5.1)：javaScript组成言的语法和基本对象; DOM：文档对象模型，描述处理网页内容的方法和接口; BOM：浏览器对象模型，描述与浏览器进行交互的方法和接口
js主要是用来操作样式的。作用：响应用户操作的。
onclick:点击事件;alert:调用浏览器的默认弹窗;script标签：解析js代码的。内嵌：放在body标签的结尾前面。
函数的作用：
function:函数（里面计算要执行的操作）
复用: 函数没取名字叫匿名函数：比如：事件调用时; 函数有名字叫有名函数：function fn1(){}; 调用的方式：1.函数名+（）;2.事件调用
window.onload:当页面加载完成的时候执行里面的代码。
鼠标移入事件：onmouseover; 鼠标移出事件:onmouseout
当操作复合样式的时候，去掉-第二个首字母大写。例如:z-index==>zIndex
数据类型:
    1.字符串(string):由零个或多个字符组成的串。必须使用单引号对或双引号对引起来
    2.数字(Number)  :  为整数或浮点数（小数）;取值范围 +Infinity ~ -Infinity 之间
    3.布尔值(Boolean) : true或false
    4.未定义(Undefined) : undefined,在有变量没赋值的情况下为undefined等等
    5.空(null) : null 在没有元素或者元素获取错误的时候会出现null等等,以上的5种数据类型统称为基本数据类型（也可以叫简单数据类型）
    6.复合（复杂）数据类型：对象
typeof:计算右边的数据为什么数据类型。typeof 检测后的值都为字符串，并且首字母为小写
ECMA中的数据类型和typeof的数据类型有点差别
typeof中的6种数据类型:字符串、数字、布尔值、undefined、object、function
ECMA中的6种数据类型: 字符串、数字、布尔值、未定义、null、对象。
Boolean:
true: true、非0数字为true、非空字符串、对象
false: undefined、null、false、0、空字符串

强制类型转换（显示类型转换）主动去转的。通过函数或方法调用，明确的将某种类型转换成另一种类型称为显示转换相反则称为隐式类型转换 。
    parseInt、parseFloat、Number、Boolean...
隐式类型转换：悄悄地转换。如果一个字符串前面只有一个加号，那么这个字符串会被系统偷偷的转成数字。如果前面为字符串后面为数字，会被系统偷偷的转成字符串。
字符串 + 数字 = 字符串。+、-、* 、%（取余）

比较:
console.log(1 == '1');//在比较的时候，先将两边的值转成同一种数据类型，然后再比较。
console.log(1 === '1');//不但会比较值还会比较数据类型。性能更高。
