nginx反向代理解决跨域
	#接口代理到api下
    location ~ ^/(api)/ {
            proxy_pass http://www.bkenglish.com;
    }
后端添加头解决跨域
Access-control-allow-origin
	通过设置Access-Control-Allow-Origin来实现跨域访问比较简单
	参考：
		http://blog.csdn.net/fdipzone/article/details/46390573/
PS:
	IE 10 提供了对规范的完整支持，但在较早版本（8 和 9）中，CORS 机制是借由 XDomainRequest 对象完成的。
	Firefox 3.5 引入了对 XMLHttpRequests 和 Web 字体的跨域支持（但最初的实现并不完整，这在后续版本中得到完善）；Firefox 7 引入了对 WebGL 贴图的跨域支持；Firefox 9 引入了对 drawImage 的跨域支持。
	XDomainRequest(兼容IE8和IE9,IE10+或者其他标准浏览器已废弃)
		https://developer.mozilla.org/zh-CN/docs/Web/API/XDomainRequest
	参考：
		https://developer.mozilla.org/zh-CN/docs/Web/HTTP/Access_control_CORS?spm=a2c4g.11186623.2.7.k12owi
同源策略
	同协议、同域名、同端口
	参考：
		http://www.ruanyifeng.com/blog/2016/04/same-origin-policy.html

同源策略限制的对象
	1.Cookie、LocalStorage 和 IndexDB 无法读取。
	2.DOM 无法获得。
	3.AJAX 请求不能发送。
	
如何设置同源策略(hosts)
--.Cookie
	两个网页一级域名相同，只是二级域名不同，浏览器允许通过设置document.domain共享 Cookie。例如：www.baidu.com 和 hi.baidu.com
	test.xxx.com a.html
	<script>
		document.domain="baidu.com";//设置同源策略
		document.cookie="test1=hello";
	</script>

	test.xxx.com b.html
	<script>
		document.cookie
	</script>

	domain='baidu.com';//最实用的同源策略

--.iframe、img、script(jsonp)、link(background)
 	img
	 	var s=new Image();
	 	vat start=Date.now();
	 	s.src="http://www.baidu.com/s.gif";
	 	s.onload=function(){
	 		var end=Date.now();
	 		var t=end-start;
	 		v=s.size / t +'kb/s';
	 	}

 	script--jsonp
		<script type="text/javascript" src="http://aa.com/index.php?callback=test"></script>
		<script type="text/javascript">
			function test(data){
				console.log(data);
			}
		</script>

		<?php
			if(callback){
				test({'aa':123})
			}
		?>

	iframe
		前提，www.a.com下a.html，a.html内iframe调用了www.b.com下的b.html，b.html下iframe调用了www.a.com下的c.html
　　	b.html是不无法直接访问a.html的对象，因为涉及到跨域，但可以访问parent，同样c.html的parent可以访问b.html。c.html和a.html同域，是可以访问a下的对象的。parent.parent.js对象!
		a.html
			<iframe src="http://www.b.com/b.html" ></iframe>
	    b.html
	    	<iframe id="myfarme" src="http://www.a.com/c.html"></iframe>
	    c.html
	    	window.onload = function(){
			    var text = window.location.href.split('=')[1]
			    console.log(parent.parent)
			    parent.parent.dosome(text);
			}
--.高阶WebSocket、posMessage(iframe、image)
--.代码写到image里面 http://www.jb51.net/article/102767.htm

