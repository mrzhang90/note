RESTful
	一种架构风格
	同一种路由，既可以设置get,又可以设置post,这种就输入RESTful
	
1.动画原则：
	除了透明度(opacity)和切换(trandform)，不要改变任何属性
2.HTTP状态码：
	304：表示服务器认为目标与缓存中一致，指示浏览器直接访问缓存；；准确的解释为————代表文件处于未改变状态，因此未受理访问请求
3.fiebug调试:
    通过firbug调试,切换到html下,然后鼠标移动到html树中相应的元素上,上面的页面中相应的元素会被高亮显示:
    在页面中蓝色部分表示元素内部,紫色部分表示padding部分,黄色部分表示margin部分
4.耦合度
	如果一个模块修改，其他模块不变-那么耦合度就很低
	如果一个模块修改，其他模块也要修改-那么他们的耦合度就非常高
5.前端工程化
	项目打包
	测试
	发布到服务器

学习记录：
1.基本的数学理论和物理 运动 匀速 斜抛 三角函数 ax2+bx+2b  矩阵
2.canvas的基本用法 画圆 正方形
3.利用canvas集合数学和物理 展现到一个画板上 实现基本canvas应用
4.大量的接触 图标展现库 d3 hichartts echrats...源码看一看
5.尝试着自己写一个 图形可视化的小库
6.利用cocos进阶学会游戏场景啊 舞台啊 镜头啊 。。
7.学会物理引擎在JavaScript中的应用 
8.接触2.5D的游戏开发 利用这些游戏框架 开发绚丽的H5页面
9.开始接触3D图形学的理论部分
10.大致看看Webgl开始着手开发Three和周边的库
11.完善你的数据结构和算法理论 不停的应用
12.把前端架构的测试 性能啊 等等 优秀思想应用进前端图形学的工程

javascript是在虚拟机(VM)中执行的，该虚拟机能够最大化地优化代码并压榨每一丝的性能，这也使得JavaScript称为速度最快的动态语言之一。
Wasm同样在JavaScript虚拟机中运行，但是它表现得更好。两者可以自由交互、互不排斥，这样你就同时拥有了两者最大的优势——JavaScript巨大的生态系统和有好的语法，WebAssembly接近原生的表现性能。