--.判断是移动端，就加载mobie.js
	if("ontouchend" in document) document.write("<script src='assets/js/jquery.mobile.custom.min.js'>"+"<"+"/script>");
--.IOS上new Date获取时间的bug，兼容IOS5以上版本：
    new Date('2013/10/21');
    或者
    var d = new Date(date);
    d = d.getFullYear() > 0 ? d : new Date(Date.parse(date.replace(/-/g, "/")));

--.IOS和Android系统都会默认某长度内的数字为电话号码，即使不加也是会默认显示为电话的
	<meta content="telephone=no" name="format-detection">
	
--.ios以及微信页面中title动态修改失效问题
	var $body = $('body')
	document.title ="动态titile标题"
	// hack在微信等webview中无法修改document.title的情况
	var $iframe = $('<iframe src="/favicon.ico"></iframe>').on('load', function() {
	  setTimeout(function() {
	    $iframe.off('load').remove()
	  }, 0)
	}).appendTo($body)
--.PC网站兼容手机设备
	方法一.
		PC网站自适应移动端。-青古项目
		解决两个问题：1.浏览器窗口缩小,div宽度100%时，拖动横向滚动条不错乱;2.手机浏览器查看时，不错乱
		CSS:body{min-width:1180px;}
		HTML:<meta name="viewport" content="width=1180">
	方法二.
		参考：
			http://www.cnblogs.com/YYvam1288/p/5409129.html
			http://www.cnblogs.com/2050/p/3877280.html
		HTML:--在head引入这一句，可以获取真实的ideal viewport宽度，不加这句，移动端都返回980
			<meta name="viewport" content="width=device-width, initial-scale=1, maximum-scale=1">
		JS:
			$(function(){
			    verif_screen(function(){
			        $('meta[name=viewport]').attr('content','width=device-width, initial-scale=1');//每次横竖屏切换重置viewport，以获取真实的像素宽度-ideal viewport
			        if(isPhone()){
				        var width=$(document.body).width();
				        var scale=width/1200;
				        console.log(width,scale)
				        $('meta[name=viewport]').attr('content','width=device-width, initial-scale='+scale+', maximum-scale='+scale+', user-scalable=0');
				    }
			    })
			})
			//封装函数-手机横竖屏切换触发
			function verif_screen(callback){
			    var supportOrientation = (typeof window.orientation === 'number' && typeof window.onorientationchange === 'object');
			    var init = function(){
			        var orientation='';
			        var updateOrientation = function(){
			            if(supportOrientation){
			                orientation = window.orientation;
			                switch(orientation){
			                    case 90:
			                    case -90:
			                        orientation = false;
			                        break;
			                    default:
			                        orientation = true;
			                        break;
			                }
			            }else{
			                orientation = (window.innerWidth > window.innerHeight) ? true : false;
			            }
			            callback(orientation);
			        };
			        if(supportOrientation){
			            window.addEventListener('orientationchange',updateOrientation,false);
			        }else{
			            //监听resize事件
			            window.addEventListener('resize',updateOrientation,false);
			        }
			        updateOrientation();
			    };
			    init();
			}
			function isPhone(){
			    var mobileAgent = new Array("iphone", "ipod", "ipad", "android", "mobile", "blackberry", "webos", "incognito", "webmate", "bada", "nokia", "lg", "ucweb", "skyfire");
			    var browser = navigator.userAgent.toLowerCase(); 
			    var isMobile = false; 
			    for (var i=0; i<mobileAgent.length; i++){
			        if(browser.indexOf(mobileAgent[i])!=-1){
			            isMobile = true; 
			            // alert(mobileAgent[i]);
			            // location.href = '手机网址';
			            break;
			        }
			    }
			    return isMobile;
			}
笔记：		
	box-sizing:border-box;-webkit-box-sizing:border-box;
		移动端要设置盒模型，这样就不会被撑开	
	em=1个当前元素文字大小; rem=1个html的文字大小
	window.devicePixelRatio:像素比是设备物理像素和设备独立像素(dips)的比例,像素比为2，原先一个像素东西会用2像素的区域来显示;
	物理像素:设备屏幕的本身像素值;独立像素:设备屏幕的本身像素值/像素比;实际像素:文档的实际像素
	<meta name="viewport" content="width=device-width,height=device-height,user-scalable=no,initial-scale=1.0,minimum-scale=1.0,maximum-scale=1,target-densitydpi=device-dpi" />
	<meta name="viewport" content="" />:视口设置;
	    width:视口宽度(数值||device-width) 直接数值安卓部分手机不支持,IOS支持; user-scalable:是否允许用户缩放( yes||no); initial-scale:初始比例; minimum-scale:最小缩放比例; maximum-scale:最大缩放比例;
	    target-densitydpi://每英寸像素点的个数
	        dpi_value 70-400(取值范围)
	        device-dpi 设备默认像素密度
	        high-dpi 高像素密度
	        meidum-dpi 中等像素密度
	        low-dpi 低像素密度
	        webkit 内核已准备再支持
	适配：
		<script>//移动端适配等比例
		    var i=0;
		    i=window.devicePixelRatio>1?1/window.devicePixelRatio:1;
		    document.write('<meta name="viewport" content="width=device-width,initial-scale='+i+',minimum-scale='+i+',maximum-scale='+i+',user-scalable=no" />');
		</script>
		<script>//移动端ren字体适配
		    //getBoundingClientRect() 元素的尺寸和位置
		    var oHtml=document.getElementsByTagName("html")[0];//在js里找到html这个元素
		    var iWidth=oHtml.getBoundingClientRect().width;//获取到html的宽度;
		    oHtml.style.fontSize=iWidth/16+"px";//给html设置字体大小，字体的大小刚好是html宽度的16分之一;
		</script>

	适配方案一: 1.viewport 宽度设置320;2.页面的宽度按照320来写,内容设置居中
	适配方案二:(x) 百分比布局
	适配方案二: (rem)

	这个适配更适合手机
	    @media all and (max-device-width:640px)
	@media all and (min-width:320px) and (max-width:767px)
	超小屏幕:手机 (<768px); 小屏幕:平板 (≥768px);中等屏幕:桌面 (≥992px);大屏幕:桌面 (≥1200px);超大屏幕:桌面 (≥1400px)
	媒体关键字:and/not/only
	媒体类型:
	    all 所有的类型
	    handheld 手持设备
	    screen 彩屏设备
	    print 打印预览
	    braille 盲文触觉设备
	    embossed 盲文打印机
	    projection 投影
	    speech 听觉设备
	    TTY  电传打字机终端，或显示能力有限的移动设备
	    tv 电视
	媒体特征
	    width  等于
	    min-width 大于等于
	    max-width 小于等于
	    orientation : landscape 横屏
	    orientation : portrait 竖屏
	    height
	    min-height
	    max-height
	    device-width
	    min-device-width
	    max-device-width
	    device-height
	    min-device-height
	    max-device-height
	    *aspect-ratio  宽高比 (分数)
	    min-aspect-ratio
	    max-aspect-ratio
	    device-aspect-ratio  设备宽高比
	    min-device-aspect-ratio
	    max-device-aspect-ratio
	    device-pixel-ratio